const mongoose = require("mongoose")
const Project = require('./project')
const Task = require('./task')

const cardSchema = mongoose.Schema({
    name: { type: String },
    index: { type: Number },
    project: { type: mongoose.Schema.Types.ObjectId, ref: 'Project' },
    tasks: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Task' }]
})


cardSchema.post('findOneAndDelete', async function (next) {
    try {
        console.log('post delete card')
        console.log("this : ", this)
        console.log("this.project : ", this.project)
        await sortTheIndexes(this.project, this.index)
        return next()
    } catch (error) {
        console.log('error')
    }
}
)

//check with renana when it happend (?)
function sortTheIndexes(projectId, thisIndex) {
    console.log("sortTheIndexes function")
    return new Promise(function (resolve, reject) {
        Project.findById(project).populate('cards').then(card => {
            let cards = project.cards
            cards.forEech(async (card) => {
                console.log("card.index")
                if (card.index > thisIndex)
                    card.index -= 1
                console.log("card.index")
                await cards.save()
            })
            resolve(project.cards)
        })
    })
}

module.exports = mongoose.model("Card", cardSchema)